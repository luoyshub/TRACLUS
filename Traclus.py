import src.traclus.traclus as tr
import numpy as np
from scipy import io

# 加载数据
data_mat = io.loadmat('./data/TRAFFIC_trans.mat')
data = data_mat['data']
data_subset = data[0:20]

# 整理数据输入格式
def data_input(data):
    length = data.shape[0]
    input = []
    for i in range(length):
        input.append(data[i])
        
    return input
trajectory = data_input(data_subset)

# 运行算法
output = tr.traclus(trajectory, directional=True, min_samples=10, d_weights=[1, 1, 1])
# The partitions variable will contain all the trajectories that are partitioned by the algorithm into their characteristic points (cp). 
# The segments variable will contain all the generated partitions split into segments. 
# The dist_matrix variable will contain the distance matrix generated by the distance function as defined in the paper. 
# The clusters variable will contain the line segment clusters generated by the algorithm. 
# The cluster_assignments variable will contain the cluster assignments for each line segment. 
# The representative_trajectories variable will contain the representative trajectories generated by the algorithm.
partitions                  = output[0]
segments                    = output[1]
dist_matrix                 = output[2]
clusters                    = output[3]
cluster_assignments         = output[4]
representative_trajectories = output[5]


# 保存结果
io.savemat('./result/traclus_results_6_30_4', {'partitions':partitions, 'segments':segments, 'dist_matrix':dist_matrix, 'clusters':clusters, 'cluster_assignments':cluster_assignments, 'representative_trajectories':representative_trajectories})

# 加载结果，其中 clusters 即为所求聚类
# partitions , segments, dist_matrix, clusters, cluster_assignments, representative_trajectories
# data_mat = io.loadmat('./result/traclus_results_6_30_4')
# partitions = data_mat['partitions']
# segments = data_mat['segments']
# clusters = data_mat['clusters']
# representative_trajectories = data_mat['representative_trajectories']
# cluster_assignments = data_mat['cluster_assignments']
